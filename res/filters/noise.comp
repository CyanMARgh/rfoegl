#version 430 core
layout(local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

layout(rgba32f, binding = 0) uniform image2D out_tex;

float hash12(vec2 p) {
	vec3 p3  = fract(vec3(p.xyx) * .1031);
    p3 += dot(p3, p3.yzx + 33.33);
    return fract((p3.x + p3.y) * p3.z);
}

void main() {
	ivec2 p0 = ivec2(gl_GlobalInvocationID.xy);
	float h = hash(vec2(p0));
	imageStore(out_tex, p0, vec4(h.xxx, 1));
}



